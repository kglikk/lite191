{"version":3,"sources":["C:/Users/VScode/lite191/src/app/+calculation/loadflow/loadflow-routing.module.ts","C:/Users/VScode/lite191/src/app/+calculation/loadflow/loadflow.component.html","C:/Users/VScode/lite191/src/app/+calculation/loadflow/loadflow.component.ts","C:/Users/VScode/lite191/src/app/+calculation/loadflow/loadflow.module.ts","C:/Users/VScode/lite191/src/app/components/load-flow-parameters-form/load-flow-parameters-form.component.css","C:/Users/VScode/lite191/src/app/components/load-flow-parameters-form/load-flow-parameters-form.component.html","C:/Users/VScode/lite191/src/app/components/load-flow-parameters-form/load-flow-parameters-form.component.ts"],"names":[],"mappings":"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","file":"loadflow.module.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoadFlowComponent } from \"app/+calculation/loadflow/loadflow.component\";\n\nconst routes: Routes = [{\n  path: '',\n  component: LoadFlowComponent,\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoadFlowRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/VScode/lite191/src/app/+calculation/loadflow/loadflow-routing.module.ts","module.exports = \"<!-- MAIN CONTENT -->\\n\\n  <div *ngIf=\\\"show;else othercontent\\\" id=\\\"content\\\">\\n\\n    <div class=\\\"row\\\">\\n      <!-- <sa-big-breadcrumbs [items]=\\\"['Load Flow Calculation']\\\" icon=\\\"table\\\" class=\\\"col-xs-12 col-sm-7 col-md-7 col-lg-4\\\"></sa-big-breadcrumbs> -->\\n      <sa-big-breadcrumbs [items]=\\\"['Load Flow Calculation']\\\" icon=\\\"table\\\" class=\\\"col-xs-12 col-sm-7 col-md-7 col-lg-4\\\"></sa-big-breadcrumbs>\\n      <!-- <sa-stats></sa-stats> -->\\n    </div>\\n\\n    <load-flow-parameters-form (change) = \\\"executeLoadFlow()\\\" ></load-flow-parameters-form>\\n    \\n    <!-- widget grid -->\\n    <sa-widgets-grid>\\n\\n\\n      <div class=\\\"row\\\">\\n        <article class=\\\"col-sm-12\\\">\\n          <div class=\\\"table-responsive\\\" style=\\\"width: 100%; height: 500px;\\\">\\n            <ag-grid-angular #agGrid style=\\\"width: 100%;height: 100%;\\\" class=\\\"ag-fresh\\\" [gridOptions]=\\\"gridOptions\\\" [rowData]=\\\"rowData\\\">\\n              <!--  [columnDefs]=\\\"columnDefs\\\" [defaultColDef]=\\\"defaultColDef\\\" -->\\n            </ag-grid-angular>\\n          </div>\\n\\n          <!--\\n          <sa-widget [editbutton]=\\\"false\\\" color=\\\"darken\\\">\\n            <header>\\n              <span class=\\\"widget-icon\\\">\\n                <i class=\\\"fa fa-table\\\"></i>\\n              </span>\\n\\n              <h2>Load Flow results</h2>\\n            </header>\\n            <div>\\n              <div class=\\\"widget-body no-padding\\\">\\n                 <alert type=\\\"info\\\" class=\\\"no-margin fade in\\\" dismisser=\\\"\\\"> \\n                <i class=\\\"fa-fw fa fa-info\\\"></i>\\n                Adds zebra-striping to table row within <code>&lt;table&gt;</code> by adding the <code>.table-striped</code>\\n                with the base class\\n              </alert>\\n           \\n            \\n\\n              </div>\\n            </div>\\n          </sa-widget>\\n           -->\\n        </article>\\n\\n\\n      </div>\\n\\n    </sa-widgets-grid>\\n  </div>\\n\\n <ng-template #othercontent>Please open or create project in the Home tab first</ng-template>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/VScode/lite191/src/app/+calculation/loadflow/loadflow.component.html\n// module id = ../../../../../src/app/+calculation/loadflow/loadflow.component.html\n// module chunks = loadflow.module","import { ShowDataService } from 'app/services/show-data.service';\nimport { Component, Inject } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { GridOptions } from \"ag-grid/main\";\n\n\n@Component({    \n    templateUrl: './loadflow.component.html'\n})\n\n\nexport class LoadFlowComponent {\n    public loadflow: LoadFlow[] = [];\n\n    gridOptions: GridOptions;\n    rowData: Object; //było any[]\n    show: boolean;\n   // showResult: boolean = false;\n    \n    constructor(public http: HttpClient, public showData: ShowDataService, @Inject('BASE_URL') baseUrl: string) {\n      //  this.rowData = JSON.parse(localStorage.getItem('dane'));\n        \n        //this.showResult = false;\n        //czy pokazywać dane czy nie w zależności od tego czy projekt jest otwarty\n        this.showData.currentShow.subscribe(show => this.show = show);\n        \n        // we pass an empty gridOptions in, so we can grab the api out\n        this.gridOptions = <GridOptions>{\n            onGridReady: () => {\n                this.gridOptions.api.sizeColumnsToFit(); //make the currently visible columns fit the screen.\n                // show 'no rows' overlay              \n            },\n           \n            \n        };\n       \n\n        this.gridOptions = {           \n           // singleClickEdit: false,\n            stopEditingWhenGridLosesFocus: true,\n            overlayLoadingTemplate: '<span class=\"ag-overlay-loading-center\">Please click \"Calculate\" button to see results </span>',\n            enableSorting: true,\n            enableFilter: true,\n            enableColResize: true,\n            animateRows: true,\n            rowSelection: 'multiple',\n            columnDefs: [\n                // put the three columns into a group\n                {\n                    headerName: 'Load flow data',\n                    children: [\n                        \n                        {\n                            headerName: \"Bus no.\", field: \"busNo\", type: \"numericColumn\"                           \n                        },\n                        {\n                            headerName: \"Voltage [kV]\", field: \"resultU\", type: \"numericColumn\",\n                            \n                        },\n                        {\n                            headerName: \"Angle [degrees]\", field: \"resultSigma\", type: \"numericColumn\",\n                           \n                        }\n                        \n                    ]\n                }\n            ],\n            defaultColDef: {\n                //enableCellChangeFlash: true,\n                // set every column width\n                width: 150,\n                // make every column editable\n                editable: false,\n                // make every column use 'text' filter by default\n                filter: 'text'\n            },\n        }\n\n        \n        /*\n        http.get(baseUrl + 'api/LoadFlowController/LoadFlow').subscribe(result => {\n            this.rowData = result.json(); //as LoadFlow[]\n        }); */ \n        //, error => console.error(error)\n    }\n\n   \n    executeLoadFlow(){\n        this.http.get('api/LoadFlow/Get').subscribe(result => {\n\n        \n            this.rowData = result; //as LoadFlow[]\n          //  localStorage.setItem('dane', JSON.stringify(result)); \n        }\n        );\n\n      //  this.showResult = true;\n\n    }\n\n\n}\n\ninterface LoadFlow {  \n    busNo: number;\n    resultU: number;\n    resultSigma: number; \n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/VScode/lite191/src/app/+calculation/loadflow/loadflow.component.ts","import { NgModule, Injectable } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { LoadFlowRoutingModule } from './loadflow-routing.module';\nimport { LoadFlowComponent } from \"app/+calculation/loadflow/loadflow.component\";\nimport {SmartadminModule} from \"app/shared/smartadmin.module\";\nimport {LoadFlowParametersFormComponent} from \"app/components/load-flow-parameters-form/load-flow-parameters-form.component\";\n\nimport {AgGridModule} from 'ag-grid-angular/main';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    SmartadminModule,\n    AgGridModule.withComponents([]),\n    LoadFlowRoutingModule,\n    ReactiveFormsModule\n    \n  ],\n  declarations: [\n    LoadFlowComponent,\n    LoadFlowParametersFormComponent\n  ],\n  providers: [\n    { provide: 'BASE_URL', useFactory: getBaseUrl }\n  ] \n})\nexport class LoadFlowModule { }\n\nexport function getBaseUrl() {\n  return document.getElementsByTagName('base')[0].href;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/VScode/lite191/src/app/+calculation/loadflow/loadflow.module.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".box{\\r\\n    border: solid 1px #000;\\r\\n    padding: 10px;\\r\\n    text-align:center;\\r\\n  }\\r\\n\\r\\n  \\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/VScode/lite191/src/app/components/load-flow-parameters-form/load-flow-parameters-form.component.css\n// module id = ../../../../../src/app/components/load-flow-parameters-form/load-flow-parameters-form.component.css\n// module chunks = loadflow.module","module.exports = \"<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"openModal(template)\\\" style=\\\"margin-top: 10px; margin-bottom: 10px\\\">\\n  Calculate</button>\\n\\n<ng-template #template>\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title pull-left\\\">Load Flow Parameters</h4>\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n\\n    <div class=\\\"bs-example\\\">\\n      <ul class=\\\"nav nav-tabs\\\">\\n        <li class=\\\"active\\\">\\n          <a data-toggle=\\\"tab\\\" href=\\\"#sectionA\\\">Basic Description</a>\\n        </li>\\n\\n        <li class=\\\"dropdown\\\">\\n          <a data-toggle=\\\"dropdown\\\" class=\\\"dropdown-toggle\\\" href=\\\"#\\\">Iteration control\\n            <b class=\\\"caret\\\"></b>\\n          </a>\\n          <ul class=\\\"dropdown-menu\\\">\\n            <li>\\n              <a data-toggle=\\\"tab\\\" href=\\\"#dropdown1\\\">Max. number of iterations for:</a>\\n            </li>\\n            <li>\\n              <a data-toggle=\\\"tab\\\" href=\\\"#dropdown2\\\">Max. acceptable load flow error for:</a>\\n            </li>\\n          </ul>\\n        </li>\\n      </ul>\\n\\n\\n      <div class=\\\"tab-content\\\">\\n        <div id=\\\"sectionA\\\" class=\\\"tab-pane fade in active\\\">\\n          <p>AC Load Flow, balanced, positive sequence</p>\\n          <p>Newton-Raphson method</p>\\n        </div>\\n        <div id=\\\"dropdown1\\\" class=\\\"tab-pane fade\\\">\\n          <h3>Max. number of iterations for:</h3>\\n          <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"saveAndExecute()\\\" class=\\\"form-horizontal\\\">\\n            <div *ngIf=\\\"form.errors\\\" class=\\\"alert alert-danger\\\">At least one input parameter is invalid </div>\\n\\n            <div formGroupName=\\\"iteration\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"iterNR\\\">Newton-Raphson iteration:</label>\\n                <input formControlName=\\\"iterNR\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"iterNR\\\">\\n                <div *ngIf=\\\"iterNR.touched && iterNR.invalid\\\" class=\\\"alert alert-danger\\\">It is required</div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"outIter\\\">Outer loop</label>\\n                <input formControlName=\\\"outIter\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"outIter\\\">\\n                <div *ngIf=\\\"outIter.touched && outIter.invalid\\\" class=\\\"alert alert-danger\\\">It is required</div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"steps\\\">Number of steps</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"steps\\\" value=\\\"1\\\">\\n              </div>\\n            </div>\\n            <!--\\n            <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">Execute</button>\\n            -->\\n          </form>\\n        </div>\\n        <div id=\\\"dropdown2\\\" class=\\\"tab-pane fade\\\">\\n          <h2>Max. acceptable load flow error for:</h2>\\n          <form class=\\\"form-horizontal\\\">\\n\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"errNodes\\\">Nodes</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"errNodes\\\" value=\\\"1\\\">\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"errorModelEquations\\\">Model Equations [kVA]</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"errorModelEquations\\\" value=\\\"0,1\\\">\\n\\n            </div>\\n            <!--<button type=\\\"submit\\\" class=\\\"btn btn-default\\\">Submit</button>-->\\n          </form>\\n        </div>\\n\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"modalRef.hide()\\\">Close</button>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveAndExecute()\\\">Execute</button>\\n   \\n  </div>\\n</ng-template>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/VScode/lite191/src/app/components/load-flow-parameters-form/load-flow-parameters-form.component.html\n// module id = ../../../../../src/app/components/load-flow-parameters-form/load-flow-parameters-form.component.html\n// module chunks = loadflow.module","import { LoadFlowComponent } from 'app/+calculation/loadflow/loadflow.component';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\nimport { ShowDataService } from './../../services/show-data.service';\nimport { ProjectService } from './../../services/project.service';\nimport { Component, OnInit, Output, EventEmitter, TemplateRef } from '@angular/core';\nimport { AuthService } from 'app/services/auth/auth.service';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\n\n\n\n@Component({\n  selector: 'load-flow-parameters-form',\n  templateUrl: './load-flow-parameters-form.component.html',\n  styleUrls: ['./load-flow-parameters-form.component.css']\n})\nexport class LoadFlowParametersFormComponent implements OnInit {\n\n  @Output() change = new EventEmitter();\n\n  projects: any[];\n  deletedProject: any = {};\n  selectedProject: any = [];\n  modalRef: BsModalRef;\n  headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n\n  form = new FormGroup({\n    iteration: new FormGroup({\n      iterNR: new FormControl('25', [Validators.required]),\n      outIter: new FormControl('20', Validators.required)\n    })\n  });\n\n  get iterNR() {\n    return this.form.get('iteration.iterNR');\n  }\n\n  get outIter() {\n    return this.form.get('iteration.outIter');\n  }\n\n\n\n  constructor(public http: HttpClient, private projectService: ProjectService, private auth: AuthService, private modalService: BsModalService, private showData: ShowDataService) {\n\n  }\n\n\n  ngOnInit() {\n\n  }\n\n  saveAndExecute() {\n\n    this.form.setErrors({\n      invalidLogin: true\n    });\n\n\n    //wykonaj Execute z loadflow.component\n    this.change.emit();\n\n    //schowaj ramke\n    this.modalRef.hide();\n  }\n\n\n\n\n\n  openModal(template: TemplateRef<any>) {\n\n    this.modalRef = this.modalService.show(template);\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/VScode/lite191/src/app/components/load-flow-parameters-form/load-flow-parameters-form.component.ts"],"sourceRoot":"webpack:///"}