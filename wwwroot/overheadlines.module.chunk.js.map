{"version":3,"sources":["C:/Users/VScode/lite191/src/app/+data/overheadlines/overheadlines-routing.module.ts","C:/Users/VScode/lite191/src/app/+data/overheadlines/overheadlines.component.css","C:/Users/VScode/lite191/src/app/+data/overheadlines/overheadlines.component.html","C:/Users/VScode/lite191/src/app/+data/overheadlines/overheadlines.component.ts","C:/Users/VScode/lite191/src/app/+data/overheadlines/overheadlines.module.ts"],"names":[],"mappings":"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","file":"overheadlines.module.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { OverheadLinesComponent } from \"app/+data/overheadlines/overheadlines.component\";\n\nconst routes: Routes = [{\n  path: '',\n  component: OverheadLinesComponent,\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class OverheadLinesRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/VScode/lite191/src/app/+data/overheadlines/overheadlines-routing.module.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"input[type=\\\"file\\\"] {\\n  display: none;\\n}\\n\\n.custom-file-upload {\\n /* border: 1px solid #ccc; */\\n  display: inline-block;\\n  padding: 6px 12px;\\n  cursor: pointer;\\n \\n}\\n\\n.custom-file-download {\\n    border: none;\\n    padding: 0;\\n    background: none;\\n  \\n}\\n\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/VScode/lite191/src/app/+data/overheadlines/overheadlines.component.css\n// module id = ../../../../../src/app/+data/overheadlines/overheadlines.component.css\n// module chunks = overheadlines.module","module.exports = \"<!-- MAIN CONTENT -->\\n<div *ngIf=\\\"show;else otherContent\\\" id=\\\"content\\\">\\n\\n  <div class=\\\"row\\\">\\n    <sa-big-breadcrumbs [items]=\\\"['Data', 'Overhead Lines']\\\" icon=\\\"table\\\" class=\\\"col-xs-12 col-sm-7 col-md-7 col-lg-4\\\"></sa-big-breadcrumbs>\\n    <!-- <sa-stats></sa-stats> -->\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class='col-sm-12' style=\\\"margin-top: 10px; margin-bottom: 10px\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=onAddRow()>Add Row</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=removeSelected()>Delete selected</button>\\n        <label for=\\\"file-upload\\\" class=\\\"custom-file-upload\\\">\\n          <i class=\\\"fa fa-cloud-upload\\\"></i> Import Data (Excel)\\n        </label>\\n        <input id=\\\"file-upload\\\" type=\\\"file\\\" (change)=\\\"onFileUpload($event)\\\" multiple=\\\"false\\\"/>\\n    \\n        <button class=\\\"custom-file-download\\\" id=\\\"file-download\\\" (click)=\\\"export()\\\" > <i class=\\\"fa fa-cloud-download\\\"></i> Export Data (Excel) </button>\\n    \\n      </div>\\n  </div>\\n  <!-- widget grid -->\\n  <sa-widgets-grid>\\n    <div class=\\\"row\\\">\\n      <article class=\\\"col-sm-12\\\">\\n          <div class=\\\"table-responsive\\\" style=\\\"width: 100%; height: 500px;\\\">\\n              <ag-grid-angular #agGrid style=\\\"width: 100%;height: 100%;\\\" class=\\\"ag-fresh\\\" [gridOptions]=\\\"gridOptions\\\" [rowData]=\\\"rowData\\\"> \\n                <!--  [columnDefs]=\\\"columnDefs\\\" [defaultColDef]=\\\"defaultColDef\\\" -->\\n        </ag-grid-angular>\\n       </div>\\n      \\n      </article>\\n\\n\\n    </div>\\n  \\n  </sa-widgets-grid>\\n</div>\\n\\n\\n<ng-template #otherContent>Please open or create project in the Home tab first</ng-template>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/VScode/lite191/src/app/+data/overheadlines/overheadlines.component.html\n// module id = ../../../../../src/app/+data/overheadlines/overheadlines.component.html\n// module chunks = overheadlines.module","import * as XLSX from 'xlsx';\nimport { ProjectService } from './../../services/project.service';\nimport { ShowDataService } from './../../services/show-data.service';\nimport { Component, Inject } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { GridOptions } from \"ag-grid/main\";\n\n@Component({\n    templateUrl: './overheadlines.component.html',\n    styleUrls: ['./overheadlines.component.css']\n})\n\nexport class OverheadLinesComponent {\n    public overheadline: OverheadLines[] = [];\n\n    gridOptions: GridOptions;\n    rowData: Object; //było any[]\n    show: boolean;\n    name: string;\n    projectId: number;\n    projectName: string;\n    private gridColumnApi;\n\n    constructor(public http: HttpClient, public showData: ShowDataService, public projectService: ProjectService) {\n\n        //czy pokazywać dane czy nie w zależności od tego czy projekt jest otwarty\n        this.showData.currentShow.subscribe(show => this.show = show);\n\n        //obserwuj ID projektu, który jest otwarty, żeby na tej podstawie wczytywać dane\n        this.projectService.currentProjectId.subscribe(projectId => this.projectId = projectId)\n        let projectIdInside = this.projectId;\n\n\n         this.projectService.currentProjectName.subscribe(projectName => this.projectName = projectName)\n\n        // we pass an empty gridOptions in, so we can grab the api out\n        this.gridOptions = <GridOptions>{\n            onGridReady: () => {\n                this.gridOptions.api.sizeColumnsToFit(); \n            },\n         \n        };\n\n        this.gridOptions = {\n            onCellValueChanged: function (event) {\n                //jeśli zmieniona wartość jest ok \n                console.log(\"onCellValueChanged\");\n                let headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n\n                http.put('api/OverheadLine/' + event.data.id, JSON.stringify({ ID: event.data.id, Name: event.data.name, StartNodeNo: event.data.startNodeNo, EndNodeNo: event.data.endNodeNo, Length: event.data.length, UnitaryResistance: event.data.unitaryResistance, UnitaryReactance: event.data.unitaryReactance, UnitaryCapacitance: event.data.unitaryCapacitance, ProjectId: projectIdInside }), { headers }).subscribe();\n            },\n            onCellEditingStopped: () => {\n                console.log(\"onCellEditingStopped\");\n            },\n            onRowDataChanged: () => {\n                console.log(\"onRowDataChanged\");\n            },\n            singleClickEdit: false,\n            stopEditingWhenGridLosesFocus: true,\n\n            enableSorting: true,\n            enableFilter: true,\n            enableColResize: true,\n            animateRows: true,\n            rowSelection: 'multiple',\n            columnDefs: [\n                // put the three columns into a group\n                {\n                    headerName: 'Load flow data',\n                    children: [\n                        { headerName: \"Name\", field: \"name\", suppressSizeToFit: false/*width: 110*/ },\n                        {\n                            headerName: \"Start node no.\", field: \"startNodeNo\", type: \"numericColumn\", suppressSizeToFit: false,\n                            valueFormatter: this.numberValueFormatter,\n                            valueSetter: this.numberValueSetter\n                        },\n                        {\n                            headerName: \"End node no.\", field: \"endNodeNo\", type: \"numericColumn\", suppressSizeToFit: false,\n                            valueFormatter: this.numberValueFormatter,\n                            valueSetter: this.numberValueSetter\n                        },\n                        {\n                            headerName: \"Length [km]\", field: \"length\", type: \"numericColumn\",\n                            valueFormatter: this.numberValueFormatter,\n                            valueSetter: this.numberValueSetter\n                        },\n                        {\n                            headerName: \"Unitary Resistance [Ω/km]\", field: \"unitaryResistance\", type: \"numericColumn\",\n                            valueFormatter: this.numberValueFormatter,\n                            valueSetter: this.numberValueSetter\n                        },\n                        {\n                            headerName: \"Unitary Reactance [Ω/km]\", field: \"unitaryReactance\", type: \"numericColumn\",\n                            valueFormatter: this.numberValueFormatter,\n                            valueSetter: this.numberValueSetter\n                        },\n                        {\n                            headerName: \"Unitary Capacitance [uS/km]\", field: \"unitaryCapacitance\", type: \"numericColumn\",\n                            valueFormatter: this.numberValueFormatter,\n                            valueSetter: this.numberValueSetter\n                        }\n                    ]\n                }\n            ],\n            defaultColDef: {\n                //enableCellChangeFlash: true,\n                // set every column width\n                //width: 150,\n                // make every column editable\n                editable: true,\n                // make every column use 'text' filter by default\n                filter: 'text'\n            },\n        }\n\n        //wczytaj dane z bazy danych\n        this.http.get('api/OverheadLine/GetBasedOnProject/' + this.projectId).subscribe(result => {\n            this.rowData = result;\n        });\n\n        \n\n      //  this.autoSizeAll();\n    }\n \n    //sprawdzanie czy wprowadzona liczba do tabeli jest liczbą\n    numberValueFormatter(params) {\n        /*\n        if (isNaN(Number(params.value))) {\n            return \"\";\n        } else {\n            return params.value;\n        }*/\n    }\n\n    //ustawienie wartości jeśli jest liczbą\n    numberValueSetter(params) {\n        if (isNaN(parseFloat(params.newValue)) || !isFinite(params.newValue)) {\n            alert(\"It must be a number. Please use dot '.'\");\n            return false; // don't set invalid numbers!\n        }\n\n        //czy jest mniejszy od zera czy jest integer\n        if (params.colDef.field == \"startNodeNo\") {\n          //  alert(!Number.isInteger(Number(params.newValue)));\n            if(params.newValue < 0 ) {\n                alert(\"Can't be minus value\");\n                return false; // don't set invalid numbers!                \n            } else {\n                if (!Number.isInteger(Number(params.newValue))) {\n                    alert(\"Should be integer value\");\n                    return false; // don't set invalid numbers!                \n                } else {\n                    params.data.startNodeNo = params.newValue;\n                }           \n\n            }\n\n             \n        }\n        //czy jest mniejszy od zera czy jest integer\n        if (params.colDef.field == \"endNodeNo\") {\n            if (params.newValue < 0) {\n                alert(\"Can't be minus value\");\n                return false; // don't set invalid numbers!                \n            } else {\n                if (!Number.isInteger(Number(params.newValue))) {\n                    alert(\"Should be integer value\");\n                    return false; // don't set invalid numbers!                \n                } else {\n                    params.data.endNodeNo = params.newValue;\n                }    \n            }\n           \n        }\n        if (params.colDef.field == \"length\") {\n            if (params.newValue < 0) {\n                alert(\"Should be greater than 0\");\n                return false; // don't set invalid numbers!                \n            } else {\n                params.data.length = params.newValue;\n            }\n\n        }\n        if (params.colDef.field == \"unitaryResistance\") {\n            if (params.newValue < 0) {\n                alert(\"Should be greater than 0\");\n                return false; // don't set invalid numbers!                \n            } else {\n                params.data.unitaryResistance = params.newValue;\n            }\n            \n        }\n        if (params.colDef.field == \"unitaryReactance\") {\n            if (params.newValue < 0) {\n                alert(\"Should be greater than 0\");\n                return false; // don't set invalid numbers!                \n            } else {\n                params.data.unitaryReactance = params.newValue;\n            }\n            \n        }\n        if (params.colDef.field == \"unitaryCapacitance\") {\n            if (params.newValue < 0) {\n                alert(\"Should be greater than 0\");\n                return false; // don't set invalid numbers!                \n            } else {\n                params.data.unitaryCapacitance = params.newValue;\n            }\n            \n        }\n        return true;\n        //w bazie danych SQL dane są aktualizowane w onCellValueChanged  \n    }\n\n    //zaktualizowanie tabeli\n    printResult(res) {\n        console.log('---------------------------------------')\n        if (res.add) {\n            res.add.forEach(function (rowNode) {\n\n                console.log('Added Row Node', rowNode);\n            });\n        }\n        if (res.remove) {\n            res.remove.forEach(function (rowNode) {\n                console.log('Removed Row Node', rowNode);\n            });\n        }\n        if (res.update) {\n            res.update.forEach(function (rowNode) {\n                console.log('Updated Row Node', rowNode);\n            });\n        }\n    }\n\n    removeSelected() {\n\n        if (window.confirm('Are you sure you want to delete?')) {\n            //front-end\n            var selectedData = this.gridOptions.api.getSelectedRows();\n\n            let rowIdArray: number[] = [];\n            this.gridOptions.api.forEachNode(function (node) {\n\n                if (node.isSelected()) {\n                    rowIdArray.push(node.data.id);\n                }\n            });\n\n            var res = this.gridOptions.api.updateRowData({ remove: selectedData });\n            this.printResult(res);\n            //back-end\n            let headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n\n            for (var rowId = 0; rowId < rowIdArray.length; rowId++) {\n                this.http.delete('api/OverheadLine/' + rowIdArray[rowId], { headers }).subscribe();\n            }\n        } else { }\n    }\n\n    onAddRow() {\n\n        var newItem = {\n\n            name: \"Overhead Line\",\n            startNodeNo: 0,\n            endNodeNo: 0,\n            length: 0,\n            unitaryResistance: 0,\n            unitaryReactance: 0,\n            unitaryCapacitance: 0,\n\n        };\n        let headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n\n        this.http.post('api/OverheadLine', JSON.stringify({ ID: 0, Name: newItem.name, StartNodeNo: newItem.startNodeNo, EndNodeNo: newItem.endNodeNo, Length: newItem.length, UnitaryResistance: newItem.unitaryResistance, UnitaryReactance: newItem.unitaryReactance, UnitaryCapacitance: newItem.unitaryCapacitance, ProjectId: this.projectId }), { headers }).subscribe((data: Object) => {\n            //Czekamy na wykonanie sie POST, zeby zrobic GET i WPISAC dane do tabeli we front end\n\n            // po operacji post ustawiany jest specyficzny ID w bazie SQL, aby dany wiersz w fron-end miał taki sam ID, musze sciagnac te dane do frontendu    \n            this.http.get('api/OverheadLine/GetBasedOnProject/' + this.projectId).subscribe(\n                result => { this.rowData = result },\n            );\n            var res = this.gridOptions.api.updateRowData({ add: [newItem] });\n            this.printResult(res);\n        },\n        );\n    }\n\n     // pull out the values we're after, converting it into an array of rowData\n  populateGrid(workbook) {\n    let headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n\n    // our data is in the first sheet\n    var firstSheetName = workbook.SheetNames[0];\n    var worksheet = workbook.Sheets[firstSheetName];\n\n    // we expect the following columns to be present\n    var columns = {\n      'A': 'name',\n      'B': 'startNodeNo',\n      'C': 'endNodeNo',\n      'D': 'length',\n      'E': 'unitaryResistance',\n      'F': 'unitaryReactance',\n      'G': 'unitaryCapacitance'      \n    };\n    \n    var rowData = [];\n\n    // start at the 2nd row - the first row are the headers\n    var rowIndex = 2;\n\n    // iterate over the worksheet pulling out the columns we're expecting\n    while (worksheet['A' + rowIndex]) {\n      var row = {};\n      Object.keys(columns).forEach(function (column) {\n        row[columns[column]] = worksheet[column + rowIndex].w;\n      });\n      // console.log(\"JSON.stringify(row\" + JSON.stringify(row)); \n\n      rowData.push(row);\n      //połącz dwa JSONY, żeby dodać numer projektu\n      var resultRow = {\n        ...{\n            ID: 0\n          },\n        ...row,\n        ... {\n          //id: 0,         \n          projectId: this.projectId\n        }\n      };\n\n      this.http.post('api/OverheadLine',resultRow , { headers }).subscribe((data: Object) => {\n        //Czekamy na wykonanie sie POST, zeby zrobic GET i WPISAC dane do tabeli we front end\n  \n        // po operacji post ustawiany jest specyficzny ID w bazie SQL, aby dany wiersz w front-end miał taki sam ID, musze sciagnac te dane do frontendu\n        this.http.get('api/OverheadLine/GetBasedOnProject/' + this.projectId).subscribe(\n          result => { this.rowData = result; },\n        );\n  \n        var res = this.gridOptions.api.updateRowData({ add: [row] });\n        this.printResult(res);\n      });\n      rowIndex++;\n    } \n  }\n\n  wopts: XLSX.WritingOptions = { bookType: 'xlsx', type: 'array' };\n\n  onFileUpload(evt: any) {\n    /* wire up file reader */\n    const target: DataTransfer = <DataTransfer>(evt.target);\n    if (target.files.length !== 1) throw new Error('Cannot use multiple files');\n    const reader: FileReader = new FileReader();\n    reader.onload = (e: any) => {\n      /* read workbook */\n      const bstr: string = e.target.result;\n      const wb: XLSX.WorkBook = XLSX.read(bstr, { type: 'binary' });\n      this.populateGrid(wb);\n    };\n    reader.readAsBinaryString(target.files[0]);\n  }\n\n  export(): void {\n    //zbierz dane z serwera i zapisz do pliku xlsx\n    this.http.get('api/OverheadLine/GetBasedOnProjectWithoutColumns/' + this.projectId).subscribe((data: any) => {\n\n      // generate worksheet\n      const ws: XLSX.WorkSheet = XLSX.utils.json_to_sheet(data);\n\n      // generate workbook and add the worksheet \n      const wb: XLSX.WorkBook = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\n\n      /* save to file */\n      //XLSX.writeFile(wb, 'externalgrid_'+this.projectName+'.xlsx');\n      XLSX.writeFile(wb, 'overheadline_' + this.projectName + '.xlsx');\n   });\n  }\n\n}\n\nexport interface OverheadLines {\n    id: number;\n    name: string;\n    startNodeNo: number;\n    endNodeNo: number;\n    length: number;\n    unitaryResistance: number;\n    unitaryReactance: number;\n    unitaryCapacitance: number;\n    projectId: number\n}\n\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/VScode/lite191/src/app/+data/overheadlines/overheadlines.component.ts","import { NgModule, Injectable } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { OverheadLinesRoutingModule } from './overheadlines-routing.module';\nimport { OverheadLinesComponent } from \"app/+data/overheadlines/overheadlines.component\";\nimport {SmartadminModule} from \"app/shared/smartadmin.module\";\n\nimport {AgGridModule} from 'ag-grid-angular/main';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    SmartadminModule,\n    AgGridModule.withComponents([]),\n    OverheadLinesRoutingModule\n    \n  ],\n  declarations: [\n    OverheadLinesComponent\n  ],\n  providers: [\n    { provide: 'BASE_URL', useFactory: getBaseUrl }\n  ] \n})\nexport class OverheadLinesModule { }\n\nexport function getBaseUrl() {\n  return document.getElementsByTagName('base')[0].href;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/VScode/lite191/src/app/+data/overheadlines/overheadlines.module.ts"],"sourceRoot":"webpack:///"}